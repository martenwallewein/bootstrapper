load("@bazel_gazelle//:def.bzl", "gazelle")
load("@rules_pkg//:pkg.bzl", "pkg_deb", "pkg_tar")
load("@rules_pkg//:rpm.bzl", "pkg_rpm")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_go//go:def.bzl", "nogo")

# gazelle:prefix github.com/netsec-ethz/bootstrapper
gazelle(name = "gazelle")

go_binary(
    name = "bootstrapper",
    out = "bootstrapper",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
    x_defs = {"github.com/netsec-ethz/bootstrapper/config.versionString": "{STABLE_PKG_VERSION_SCION_BOOTSTRAPPER}"},
)

go_library(
    name = "go_default_library",
    srcs = [
        "bootstrap.go",
        "main.go",
    ],
    importpath = "github.com/netsec-ethz/bootstrapper",
    visibility = ["//visibility:private"],
    deps = [
        "//config:go_default_library",
        "//fetcher:go_default_library",
        "//hinting:go_default_library",
        "@com_github_inconshreveable_log15//:go_default_library",
    ],
)

# SCION bootstrapper package
pkg_tar(
    name = "scion-bootstrapper-config",
    srcs = [
        "res/packaging/debian/etc/scion/bootstrapper.toml",
    ],
    mode = "0644",
    package_dir = "/etc/scion/",
)

pkg_tar(
    name = "scion-bootstrapper-dhcp-hook",
    srcs = [
        "res/packaging/debian/etc/dhcp/dhclient-enter-hooks.d/bootstrapper",
    ],
    mode = "0755",
    package_dir = "/etc/dhcp/dhclient-enter-hooks.d/",
)

pkg_tar(
    name = "scion-bootstrapper-bin",
    srcs = [
        "bin/bootstrapper",
    ],
    mode = "0755",
    package_dir = "/usr/bin",
)

pkg_tar(
    name = "scion-bootstrapper-systemd",
    srcs = [
        "res/packaging/debian/lib/systemd/system/scion-bootstrapper@.service",
    ],
    mode = "0644",
    package_dir = "/lib/systemd/system",
)

pkg_tar(
    name = "scion-bootstrapper",
    extension = "tar.gz",
    deps = [
        ":scion-bootstrapper-bin",
        ":scion-bootstrapper-config",
        ":scion-bootstrapper-dhcp-hook",
        ":scion-bootstrapper-systemd",
    ],
)

# Package information
PKG_DESCRIPTION = "SCION Endhost Bootstrapper"

PKG_HOMEPAGE = "https://www.scion-architecture.net"

PKG_MAINTAINER = "ETH Zurich, SCIONLab Team <scionlab-admins@sympa.ethz.ch>"

# Add package defaults
ENV_PKG_ARCHITECTURE = CI_TARGET_ARCHITECTURE if ENV_PKG_ARCHITECTURE == "" else ENV_PKG_ARCHITECTURE

PKG_ARCHITECTURE = "amd64" if ENV_PKG_ARCHITECTURE == "" else ENV_PKG_ARCHITECTURE

ENV_PKG_VERSION = ""

PKG_VERSION = "0.0.0" if ENV_PKG_VERSION == "" else ENV_PKG_VERSION

pkg_deb(
    name = "scion-bootstrapper-deb",
    architecture = PKG_ARCHITECTURE,
    conffiles = [
        "/etc/scion/bootstrapper.toml",
    ],
    data = ":scion-bootstrapper",
    depends = [
        "scion-dispatcher",
        "scion-daemon",
        "scion-tools",
        "openssl",
        "libcap2-bin",
        "iproute2"
    ],
    description = PKG_DESCRIPTION,
    homepage = PKG_HOMEPAGE,
    maintainer = PKG_MAINTAINER,
    package = "scion-bootstrapper",
    postinst = "res/packaging/debian/DEBIAN/postinst",
    priority = "optional",
    section = "net",
    version = PKG_VERSION,
)

# RHEL rpm
pkg_rpm(
    name = "scion-bootstrapper-rpm",
    architecture = PKG_ARCHITECTURE,
    data = [
        ":scion-bootstrapper",
    ],
    release = "1",
    spec_file = "res/packaging/rhel/scion-bootstrapper.spec",
    version = PKG_VERSION,
)

# Nogo - Go code analysis tool
nogo(
    name = "nogo",
    config = "nogo.json",
    visibility = ["//visibility:public"],
    deps = [
        "@org_golang_x_tools//go/analysis/passes/asmdecl:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/assign:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/atomic:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/atomicalign:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/bools:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/buildssa:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/buildtag:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/cgocall:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/composite:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/copylock:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/ctrlflow:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/deepequalerrors:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/errorsas:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/fieldalignment:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/findcall:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/framepointer:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/httpresponse:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/ifaceassert:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/inspect:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/loopclosure:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/lostcancel:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/nilfunc:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/nilness:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/pkgfact:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/printf:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/reflectvaluecompare:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/shadow:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/shift:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/sigchanyzer:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/sortslice:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/stdmethods:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/stringintconv:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/structtag:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/testinggoroutine:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/tests:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unmarshal:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unreachable:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unsafeptr:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unusedresult:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/unusedwrite:go_default_library",
        #"@org_golang_x_tools//go/analysis/passes/usesgenerics:go_default_library"
    ],
)
